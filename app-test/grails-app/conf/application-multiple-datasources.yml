server:
  port: 9992
  servlet:
    context-path: /test

spring:
  h2:
    console:
      enabled: true
---
grails:
  controllers:
    upload:
      maxFileSize: 20000000
      maxRequestSize: 20000000

---
grails:
  profile: web
  codegen:
    defaultPackage: test.app
  gorm:
    reactor:
      # Whether to translate GORM events into Reactor events
      # Disabled by default for performance reasons
      events: false
info:
  app:
    name: '@info.app.name@'
    version: '@info.app.version@'
    grailsVersion: '@info.app.grailsVersion@'
spring:
  jmx:
    unique-names: true
  main:
    banner-mode: "off"
  groovy:
    template:
      check-template-location: false
  devtools:
    restart:
      additional-exclude:
        - '*.gsp'
        - '**/*.gsp'
        - '*.gson'
        - '**/*.gson'
        - 'logback.groovy'
        - '*.properties'
management:
  endpoints:
    enabled-by-default: false

---
grails:
  mime:
    disable:
      accept:
        header:
          userAgents:
            - Gecko
            - WebKit
            - Presto
            - Trident
    types:
      all: '*/*'
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      form: application/x-www-form-urlencoded
      html:
        - text/html
        - application/xhtml+xml
      js: text/javascript
      json:
        - application/json
        - text/json
      multipartForm: multipart/form-data
      pdf: application/pdf
      rss: application/rss+xml
      text: text/plain
      hal:
        - application/hal+json
        - application/hal+xml
      xml:
        - text/xml
        - application/xml
  urlmapping:
    cache:
      maxsize: 1000
  controllers:
    defaultScope: singleton
  converters:
    encoding: UTF-8
  views:
    default:
      codec: html
    gsp:
      encoding: UTF-8
      htmlcodec: xml
      codecs:
        expression: html
        scriptlet: html
        taglib: none
        staticparts: none
management:
  endpoints:
    jmx:
      unique-names: true

---
hibernate:
  # Necessario per poter eseguire operazioni DB nei controller demo
  # Aggiunto in "elements"
  #allow_update_outside_transaction: true

  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false

dataSource:
  pooled: true
  jmxExport: true
  driverClassName: org.h2.Driver
  username: sa
  password: ''
  url: jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=TRUE
  #    url: jdbc:h2:mem:dueuno;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE

  properties:
    jmxEnabled: true
    initialSize: 5
    maxActive: 50
    minIdle: 5
    maxIdle: 25
    maxWait: 10000
    maxAge: 600000
    timeBetweenEvictionRunsMillis: 5000
    minEvictableIdleTimeMillis: 60000
    validationQuery: SELECT 1
    validationQueryTimeout: 3
    validationInterval: 15000
    testOnBorrow: true
    testWhileIdle: true
    testOnReturn: false
    jdbcInterceptors: ConnectionState
    defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

dataSources:
#  sqlServer_example:
#    pooled: true
#    jmxExport: true
#    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
#    dialect: org.hibernate.dialect.SQLServerDialect
#
#    properties:
#      jmxEnabled: true
#      initialSize: 5
#      maxActive: 50
#      minIdle: 5
#      maxIdle: 25
#      maxWait: 10000
#      maxAge: 600000
#      timeBetweenEvictionRunsMillis: 5000
#      minEvictableIdleTimeMillis: 60000
#      validationQuery: "SELECT 1"
#      validationQueryTimeout: 3
#      validationInterval: 15000
#      testOnBorrow: true
#      testWhileIdle: true
#      testOnReturn: false
#      jdbcInterceptors: "ConnectionState;StatementCache(max=200)"
#      defaultTransactionIsolation: 2
#  mySql_example:
#    pooled: true
#    jmxExport: true
#    driverClassName: com.mysql.cj.jdbc.Driver
#    dialect: org.hibernate.dialect.MySQL5Dialect
#
#    properties:
#      jmxEnabled: true
#      initialSize: 5
#      maxActive: 50
#      minIdle: 5
#      maxIdle: 25
#      maxWait: 10000
#      maxAge: 600000
#      timeBetweenEvictionRunsMillis: 5000
#      minEvictableIdleTimeMillis: 60000
#      validationQuery: "SELECT 1"
#      validationQueryTimeout: 3
#      validationInterval: 15000
#      testOnBorrow: true
#      testWhileIdle: true
#      testOnReturn: false
#      jdbcInterceptors: "ConnectionState;StatementCache(max=200)"
#      defaultTransactionIsolation: 2
#
#  # Create DB with:
#  # CREATE DATABASE database_name CHARACTER SET utf8 COLLATE utf8_general_ci;
#
#  # Create USER with:
#  # CREATE USER user@localhost IDENTIFIED BY 'password';
#  # GRANT ALL ON *.* TO user@localhost;
#  sqlLite_example:
#    pooled: true
#    jmxExport: true
#    driverClassName: org.sqlite.JDBC
#    dialect: org.hibernate.dialect.SQLiteDialect
#
#    properties:
#      jmxEnabled: true
#      initialSize: 5
#      maxActive: 50
#      minIdle: 5
#      maxIdle: 25
#      maxWait: 10000
#      maxAge: 600000
#      timeBetweenEvictionRunsMillis: 5000
#      minEvictableIdleTimeMillis: 60000
#      validationQuery: "SELECT 1"
#      validationQueryTimeout: 3
#      validationInterval: 15000
#      testOnBorrow: true
#      testWhileIdle: true
#      testOnReturn: false
#      jdbcInterceptors: "ConnectionState"
#      defaultTransactionIsolation: TRANSACTION_READ_UNCOMMITTED
#  as400_example:
#    pooled: true
#    jmxExport: true
#    driverClassName: com.ibm.as400.access.AS400JDBCDriver
#    dialect: org.hibernate.dialect.DB2400Dialect
#
#    properties:
#      jmxEnabled: true
#      initialSize: 5
#      maxActive: 50
#      minIdle: 5
#      maxIdle: 25
#      maxWait: 10000
#      maxAge: 600000
#      timeBetweenEvictionRunsMillis: 5000
#      minEvictableIdleTimeMillis: 60000
#      validationQuery: SELECT 1 FROM sysibm.sysdummy1 #Valid for DB2
#      validationQueryTimeout: 3
#      validationInterval: 15000
#      testOnBorrow: true
#      testWhileIdle: true
#      testOnReturn: false
#      jdbcInterceptors: ConnectionState
#      defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
#
# If you get this error:
#
#   SQL7008 -(table) in (file) not valid for the operation
#
# You need to activate the journaling. Execute the following commands on AS/400
# substituting {LIBRARY} and {FILE} with the library and file names:
#
# CRTJRNRCV JRNRCV({LIBRARY}/{CV_FILE}) THRESHOLD(1000000000)
# RTJRN JRN({LIBRARY}/{JRN_FILE}) JRNRCV({LIBRARY}/{CV_FILE})
# STRJRNPF FILE({LIBRARY}/*ALL) JRN({LIBRARY}/{JRN_FILE})
#
# See: http://www.querytool.com/help/876.htm
environments:
  development:
    grails:
      logging:
        jul:
          usebridge: true
      plugin:
        springsecurity:
          debug:
            useFilter: true
    dataSource:
      dbCreate: create-drop
    dataSources:
#      sqlServer_example:
#        dbCreate: update
#        url: jdbc:sqlserver://localhost\instance_name:1433;databaseName=database_name
#        username: sa
#        password:
#      mySql_example:
#        dbCreate: create-drop
#        url: jdbc:mysql://localhost:3306/database_name?useSSL=false&useUnicode=true&characterEncoding=UTF-8
#        username: root
#        password:
#      sqlLite_example:
#        url: jdbc:sqlite:C:\\mydatabase.db
#      as400_example:
#        dbCreate: update
#        url: jdbc:as400://192.168.100.236
#        username: USERNAME
#        password: PASSWORD
  test:
    dataSource:
      dbCreate: update
    dataSources:
#      sqlServer_example:
#        dbCreate: update
#        url: jdbc:sqlserver://localhost\instance_name:1433;databaseName=database_name
#        username: sa
#        password:
#      mySql_example:
#        dbCreate: update
#        url: jdbc:mysql://localhost:3306/database_name?useSSL=false&useUnicode=true&characterEncoding=UTF-8
#        username: root
#        password:
#      sqlLite_example:
#        url: jdbc:sqlite:C:\\mydatabase.db
#      as400_example:
#        dbCreate: update
#        url: jdbc:as400://192.168.100.236
#        username: USERNAME
#        password: PASSWORD
  production:
    dataSource:
      dbCreate: update
    dataSources:
#      sqlServer_example:
#        dbCreate: update
#        url: jdbc:sqlserver://localhost\instance_name:1433;databaseName=database_name
#        username: sa
#        password:
#      mySql_example:
#        dbCreate: update
#        url: jdbc:mysql://localhost:3306/database_name?useSSL=false&useUnicode=true&characterEncoding=UTF-8
#        username: root
#        password:
#      sqlLite_example:
#        url: jdbc:sqlite:C:\\mydatabase.db
#      as400_example:
#        dbCreate: update
#        url: jdbc:as400://192.168.100.236
#        username: USERNAME
#        password: PASSWORD

