plugins {
    id "groovy"
    id "application"
    id "org.grails.grails-gsp"
    id "org.grails.grails-web"
    id "com.github.erdi.webdriver-binaries"
    id "com.bertramlabs.asset-pipeline"
    id "dueuno-asciidoctor"
    id "eclipse"
    id "idea"
}

group = projectGroup
version = projectVersion

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    implementation("org.grails:grails-core")
    implementation("org.grails:grails-logging")
    implementation("org.grails:grails-plugin-databinding")
    implementation("org.grails:grails-plugin-i18n")
    implementation("org.grails:grails-plugin-interceptors")
    implementation("org.grails:grails-plugin-rest")
    implementation("org.grails:grails-plugin-services")
    implementation("org.grails:grails-plugin-url-mappings")
    implementation("org.grails:grails-web-boot")
    implementation("org.grails.plugins:gsp")
    implementation("org.grails.plugins:hibernate5")
    implementation("org.grails.plugins:scaffolding")
    implementation("org.hibernate:hibernate-core:5.6.15.Final")
    implementation("org.springframework.boot:spring-boot-autoconfigure")
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-logging")
    implementation("org.springframework.boot:spring-boot-starter-tomcat")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    compileOnly("io.micronaut:micronaut-inject-groovy")
    console("org.grails:grails-console")
    runtimeOnly("com.bertramlabs.plugins:asset-pipeline-grails:4.3.0")
    runtimeOnly("com.h2database:h2")
    runtimeOnly("javax.xml.bind:jaxb-api:2.3.1")
    runtimeOnly("org.apache.tomcat:tomcat-jdbc")
    runtimeOnly("org.fusesource.jansi:jansi:1.18")
    runtimeOnly("org.glassfish.web:el-impl:2.2.1-b05")
    testImplementation("io.micronaut:micronaut-inject-groovy")
    testImplementation("org.grails:grails-gorm-testing-support")
    testImplementation("org.grails:grails-web-testing-support")
    testImplementation("org.grails.plugins:geb")
    testImplementation("org.seleniumhq.selenium:selenium-api:4.10.0")
    testImplementation("org.seleniumhq.selenium:selenium-remote-driver:4.10.0")
    testImplementation("org.seleniumhq.selenium:selenium-support:4.10.0")
    testImplementation("org.spockframework:spock-core")
    testRuntimeOnly("org.seleniumhq.selenium:selenium-chrome-driver:4.10.0")
    testRuntimeOnly("org.seleniumhq.selenium:selenium-firefox-driver:4.10.0")
    testRuntimeOnly("org.seleniumhq.selenium:selenium-safari-driver:4.10.0")
    testImplementation("io.micronaut:micronaut-http-client")

    // Dev-tools
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    // Needed to implement *Job classes
    implementation 'org.grails.plugins:quartz:2.0.13'
}

tasks.withType(War).configureEach { War war ->
    war.dependsOn compileGroovyPages
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty 'webdriver.chrome.driver', "${System.getenv('CHROMEWEBDRIVER')}/chromedriver"
    systemProperty 'webdriver.gecko.driver', "${System.getenv('GECKOWEBDRIVER')}/geckodriver"
}

webdriverBinaries {
    chromedriver '110.0.5481.77'
    geckodriver '0.32.2'
    edgedriver '110.0.1587.57'
}

assets {
    packagePlugin = true
    minifyCss = true
    minifyJs = true
    minifyOptions = [
            languageMode     : 'ES6',
            targetLanguage   : 'ES6',
            optimizationLevel: 'SIMPLE', //SIMPLE (default) or ADVANCED or WHITESPACE_ONLY
    ]
}
